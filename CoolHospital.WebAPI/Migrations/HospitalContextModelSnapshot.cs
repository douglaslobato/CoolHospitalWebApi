// <auto-generated />
using CoolHospital.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoolHospital.WebAPI.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("CoolHospital.WebAPI.Models.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedicoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicoId = 4,
                            Nome = "Cardiologia"
                        },
                        new
                        {
                            Id = 2,
                            MedicoId = 3,
                            Nome = "Pediatria"
                        },
                        new
                        {
                            Id = 3,
                            MedicoId = 2,
                            Nome = "Psiquiatra"
                        },
                        new
                        {
                            Id = 4,
                            MedicoId = 1,
                            Nome = "Ortopedista"
                        });
                });

            modelBuilder.Entity("CoolHospital.WebAPI.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Grey",
                            Sobrenome = "Richard"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cristen",
                            Sobrenome = "Schmidt"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Antony",
                            Sobrenome = "Edmundo"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Shepherd",
                            Sobrenome = "Rick"
                        });
                });

            modelBuilder.Entity("CoolHospital.WebAPI.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Carteirinha")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Carteirinha = 909090,
                            Idade = 20,
                            Nome = "Felipe",
                            Sobrenome = "Alves"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Carteirinha = 909091,
                            Idade = 25,
                            Nome = "Rodrigo",
                            Sobrenome = "Pereira"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Carteirinha = 909092,
                            Idade = 21,
                            Nome = "Priscila",
                            Sobrenome = "Oliveira"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Carteirinha = 909093,
                            Idade = 22,
                            Nome = "Paula",
                            Sobrenome = "Piolho"
                        });
                });

            modelBuilder.Entity("CoolHospital.WebAPI.Models.PacienteEspecialidade", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EspecialidadeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PacienteId", "EspecialidadeId");

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("PacientesEspecialidades");

                    b.HasData(
                        new
                        {
                            PacienteId = 1,
                            EspecialidadeId = 1
                        },
                        new
                        {
                            PacienteId = 1,
                            EspecialidadeId = 3
                        },
                        new
                        {
                            PacienteId = 2,
                            EspecialidadeId = 2
                        },
                        new
                        {
                            PacienteId = 2,
                            EspecialidadeId = 4
                        },
                        new
                        {
                            PacienteId = 3,
                            EspecialidadeId = 2
                        },
                        new
                        {
                            PacienteId = 1,
                            EspecialidadeId = 4
                        });
                });

            modelBuilder.Entity("CoolHospital.WebAPI.Models.Especialidade", b =>
                {
                    b.HasOne("CoolHospital.WebAPI.Models.Medico", "Medico")
                        .WithMany("Especialidades")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoolHospital.WebAPI.Models.PacienteEspecialidade", b =>
                {
                    b.HasOne("CoolHospital.WebAPI.Models.Especialidade", "Especialidade")
                        .WithMany("PacientesEspecialidades")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoolHospital.WebAPI.Models.Paciente", "Paciente")
                        .WithMany("PacientesEspecialidades")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
